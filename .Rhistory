install.packages("knitr")
library("knitr", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.0")
library("fBasics")
install.packages("fBasics")
install.packages("Hmisc")
install.packages("lattice")
install.packages("randomForest")
install.packages("BMA")
library("fBasics")
library("Hmisc")
library("lattice")
library("randomForest")
library("BMA")
load("C:/Users/Fernando/Ubuntu One/R/2013SEP/.RData")
pcaNNet((P1D610R ~ ., data=db21norm, thresh = .95, linout=T, size = 12, maxit=100, decay=0.001)
pcann2=pcaNNet((P1D610R ~ ., data=db21norm, thresh = .95, linout=T, size = 12, maxit=100, decay=0.001)
library("nnet")
pcann2=pcaNNet(P1D610R ~ ., data=db21norm, thresh = .95, linout=T, size = 12, maxit=100, decay=0.001)
library("caret", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.0")
pcann2=pcaNNet(P1D610R ~ ., data=db21norm, thresh = .95, linout=T, size = 12, maxit=100, decay=0.001)
pcann2=pcaNNet(P1D610R ~ ., data=db21norm, linout=T, size = 12, maxit=100, decay=0.001)
names(pcann2)
head(pcann2)
names(pcann2)
names(pcann2$model)
head(pcann2$model$n)
pcann2$model$n
pcann2=pcaNNet(P1D610R ~ ., data=db21norm, thres= 0.99,linout=T, size = 12, maxit=100, decay=0.001)
pcann2$model$n
names(pcann2$model)
pcann2$model$nunits
pcann2$model$nsunits
pcann2$model$value
pcann2=pcaNNet(P1D610R ~ ., data=db21norm, thres= 0.7,linout=T, size = 12, maxit=100, decay=0.001)
pcann2$model$n
descrCor <- cor(db21)
summary(descrCor[upper.tri(descrCor)])
highlyCorDescr <- findCorrelation(descrCor, cutoff = 0.9)
filteredDescr <- filteredDescr[, -highlyCorDescr]
filtereddb21 <- db21[, -highlyCorDescr]
ncol(filtereddb21)
names(filtereddb21)
names(db21)
highlyCorDescr <- findCorrelation(descrCor, cutoff = 0.95)
filtereddb21 <- db21[, -highlyCorDescr]
ncol(filtereddb21)
descCr
class(descrCor)
size(descrCor)
dim(descrCor)
descrCor
highlyCorDescr <- findCorrelation(descrCor, cutoff = 0.99)
filtereddb21 <- db21[, -highlyCorDescr]
ncol(filtereddb21)
names(filtereddb21)
plot(db21$t30, db21$t20)
plot(db21$t30, db21$tmed)
plot(db21$nivel10, db21$nivel)
plot(db21$nivel010, db21$nivel)
plot(db21$nivel010, db21$nivel020)
plot(db21$nivel010, db21$nivel1020)
plot(db21$nivel, db21$P1610R)
plot(db21$nivel, db21$P1D610R)
plot(db21$nivel010, db21$P1D610R)
plot(db21$tmed, db21$P1D610R)
plot(db21$t30, db21$P1D610R)
plot(db21$t20, db21$P1D610R)
plot(db21$t20, db21$t30)
filterPred=function(data, thres){
corrMat=cor(data)
hcp=findCorrelation(corrMat, cutoff=thres)
output=data[,-hcp]
}
kkdb21=filterPred(db21, 0.9)
names(db21)
kkdb21=filterPred(db21, 0.8)
names(db21)
kkdb21=filterPred(db21, 0.99)
names(db21)
descrCor <- cor(db21)
highlyCorDescr <- findCorrelation(descrCor, cutoff = 0.9)
filtereddb21 <- db21[, -highlyCorDescr]
names(filtereddb21)
filterPred=function(data, thres){
corrMat=cor(data)
hcp=findCorrelation(corrMat, cutoff=thres)
output=data[,-hcp]
}
kkdb21=filterPred(db21, 0.9)
names(kkdb21)
kkdb21=filterPred(db21, 0.7)
names(kkdb21)
kkdb21=filterPred(db21, 0.9)
names(kkdb21)
mydata <- read.delim("C:/Users/Fernando/Downloads/mydata.txt")
View(mydata)
names(mydata)
library("ggplot2")
p=ggplot(mydata, aes(factor(size), testerr, ymin=0, ymax=2)
)
p
p+geom_boxplot()
p+geom_boxplot()+ylim(0,2)
par(mfrow=c(3,1))
res.wdec.0.1=mydata[(mydata$wdec==0.1),]
res.wdec.0.01=mydata[(mydata$wdec==0.01),]
res.wdec.0.001=mydata[(mydata$wdec==0.001),]
p01=ggplot(res.wdec.0.1, aes(factor(size), testerr)+geom_boxplot()+ylim(0,2)
p01=ggplot(res.wdec.0.1, aes(factor(size), testerr))+geom_boxplot()+ylim(0,2)
p01
p001=ggplot(res.wdec.0.01, aes(factor(size), testerr))+geom_boxplot()+ylim(0,2)
p001
p0001=ggplot(res.wdec.0.001, aes(factor(size), testerr))+geom_boxplot()+ylim(0,2)
p0001
p0001=ggplot(res.wdec.0.001, aes(factor(size), testerr, facets=.~ wdec))+geom_boxplot()+ylim(0,2)
p=ggplot(mydata, aes(factor(size), testerr, facets=.~ wdec))+geom_boxplot()+ylim(0,2)
p
kk=which(min(mydata[,7]))
kk=min(mydata[,7])
kk
kkk=which(mydata[,7]==kk)
kkk
mydata[35118,]
p01max=ggplot(res.wdec.0.1, aes(factor(size), maxteerr))+geom_boxplot()
p01max
p01max=ggplot(res.wdec.0.1, aes(factor(size), maxteerr))+geom_boxplot()+ylim(0,10)
p01max
p001max=ggplot(res.wdec.0.01, aes(factor(size), maxteerr))+geom_boxplot()+ylim(0,10)
p001max
p0001max=ggplot(res.wdec.0.001, aes(factor(size), maxteerr))+geom_boxplot()+ylim(0,10)
p0001max
kkmx=min(mydata[,8])
kkmxk=which(mydata[,8]==kkmx)
kkmxk
mydata[41100,]
load("C:/Users/Fernando/Google Drive/MAIN/prAFMD50PR.RData")
library(fpp
)
install.packages("fpp")
library(fpp)
plot(a10, ylab="$ million", xlab="Year", main="Antidiabetic drug sales")
plot(log(a10), ylab="", xlab="Year", main="Log Antidiabetic drug sales")
k <- 60 # minimum data length for fitting a model
n <- length(a10)
mae1 <- mae2 <- mae3 <- matrix(NA,n-k,12)
st <- tsp(a10)[1]+(k-2)/12
st
mae1
k <- 60 # minimum data length for fitting a model
n <- length(a10)
mae1 <- mae2 <- mae3 <- matrix(NA,n-k,12)
st <- tsp(a10)[1]+(k-2)/12
n
n-k
?tsp
class(a10)
?ts
kk <- read.csv("~/kk")
View(kk)
kk[,2]<-kk[,2]-mean(kk[,2])
head(kk)
kk[,2]<-kk[,2]/sd(kk[,2])
head(kk)
plot(kk[,1])
lines(kk[,2])
kkk=kk[,2]-kk[,1]
head(kkk)
plot(kkk)
plot(kk[,2])
lines(kk[,1])
lines(kk[,1]+0.98, lwd=2, col"red")
lines((kk[,1]+0.98), lwd=2, col"red")
?cite
load("C:/Users/Fernando/Ubuntu One/R/PAPER_COMP/P1DIR1.RData")
library("gpairs", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.0")
library("ggplot2", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.0")
library("GGally", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.0")
Referencias <- read.csv("C:/PROYECTOS/EN_CURSO/ICOMPLEX/JUSTIFICACION_14/Referencias.csv", sep=";")
View(Referencias)
Referencias <- read.csv("C:/PROYECTOS/EN_CURSO/ICOMPLEX/JUSTIFICACION_14/Referencias.csv", sep=";")
View(Referencias)
class(REFERENCIAS)
class(Referencias)
names(Referencias)
names(referencias)[2]="Year"
names(Referencias)[2]="Year"
names(Referencias)[3]="DamType"
names(Referencias)[4]="Met"
names(Referencias)[5]="Target"
plot(Referencias$Year, Referencias$Target)
class(Referencias$Target)
hist(Referencias$Target)
summary(Referencias$Target)
summary(Referencias$DamType)
summary(Referencias$Year)
Referencias$Year=as.factor(Referencias$Year)
summary(Referencias$Year)
summary(Referencias$Met)
+3/42
plot(Referencias$Year, Referencias$Met)
30/42
23/42
nrow(Referencias)
11/42
14/42
plot(Referencias[Referencias$Met="NN",Year])
plot(Referencias[Referencias$Met=="NN",Year])
plot(Referencias[Referencias$Met=="NN",2])
plot(Referencias[,2])
plot(Referencias[,2], col="Met")
REFS_01 <- read.csv("C:/PROYECTOS/EN_CURSO/ICOMPLEX/JUSTIFICACION_14/REFS_01.csv", sep=";")
View(REFS_01)
names(REFS_01)[3]<- "TYPE"
head(REFS_01)
plot(REFS_01[REFS_01$MET="NN",YEAR])
class(REFS_01$MET)
summary(REFS_01$met)
summary(REFS_01$MET)
plot(REFS_01[REFS_01$MET=="NN",2])
plot(REFS_01[REFS_01$MET=="NN",YEAR])
plot(REFS_01[REFS_01$MET=="NN","YEAR"])
class(REFS_01$YEAR)
REFS_01$YEAR=as.factor(REFS_01$YEAR)
plot(REFS_01[REFS_01$MET=="NN","YEAR"])
summary(REFS_01$VAR)
+43/(3+6+10+42+1+5+3+2+2+2+2)
+42+9+10+1+5+3+2+2+2+2
43/78
summary(REFS_01$TYPE)
plot(REFS_01$TUPE)
plot(REFS_01$TYPE)
plot(REFS_01$TYPE, na.rm="TRUE")
plot(REFS_01$met)
plot(REFS_01$MET)
REFS_01 <- read.csv("C:/PROYECTOS/EN_CURSO/ICOMPLEX/JUSTIFICACION_14/REFS_01.csv", sep=";")
View(REFS_01)
plot(REFS_01$MET)
REFS_01 <- read.csv("C:/PROYECTOS/EN_CURSO/ICOMPLEX/JUSTIFICACION_14/REFS_01.csv", sep=";")
View(REFS_01)
plot(REFS_01$MET)
plot(REFS_01$TYPE)
plot(REFS_01$VAR)
REFS_01$YEAR= as.factor(REFS_01$YEAR)
plot(REFS_01[REFS_01$Met="NN",YEAR])
plot(REFS_01[REFS_01$MET="NN",YEAR])
plot(REFS_01[REFS_01$MET=="NN",YEAR])
names(REFS_01)
plot(REFS_01[REFS_01$MET=="NN","YEAR"])
plot(REFS_01[5,"YEAR"])
plot(REFS_01[,2], REFS_01[,5])
plot(REFS_01[,2])
REFS_01[REFS_01$TYPE="PAN",]
REFS_01[REFS_01$TYPE=="PAN",]
IRF_MMOV <- read.csv("C:/Users/Fernando/Google Drive/MASTER_DOCTORADO/TEXTOS/REVIEW/IRF_MMOV.csv", sep=";", dec=",")
View(IRF_MMOV)
class(IRF_MMOV)
plot(IRF_MMOV$Year, IRF_MMOV$TSin)
lines(IRF_MMOV$Year, IRF_MMOV$IRFSin)
lines(IRF_MMOV$Year, IRF_MMOV$MMovSin)
plot(IRF_MMOV$Year, IRF_MMOV$TSin)
lines(IRF_MMOV$Year, IRF_MMOV$MMovSin)
lines(IRF_MMOV$Year, IRF_MMOV$IRFSin, col="red")
plot(IRF_MMOV$IRFSin-IRF_MMOV$MMovSin)
library("ggplot2")
gg1=ggplot(IRF_MMOV)+geom_point(aes(Year, TSin))
gg1
eruption.lm = lm(eruptions ~ waiting, data=faithful)
summary(eruption.lm)
?lm
?t.test
plot(extra ~ group, data = sleep)
with(sleep, t.test(extra[group == 1], extra[group == 2]))
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x, n) {
x^3
}
cube(3)
d=3L
class(d)
d
L=2
d
pwd data
install.packages("KernSmooth")
library("KernSmooth")
R.version.string
R.version.string
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z*2+1000
my_div
test00 <- read.table("C:/PROYECTOS/EN_CURSO/ESTANYGENTO/TRANSITORIO/test00.r", quote="\"")
View(test00)
test00_val <- read.table("C:/PROYECTOS/EN_CURSO/ESTANYGENTO/TRANSITORIO/test00_val.r", quote="\"")
View(test00_val)
class(test00)
ref=data.frame(test00,test00_val$V2)
head(ref)
names(ref)=c("node", "x", "y", "z", "val")
head(ref)
?knn
??knn
library("caret", lib.loc="C:/Users/Fernando/Documents/R/win-library/3.1")
transform=knnreg(val~x,y,z)
transform=knnreg(val~x+y+z, data=ref)
kkk=c(520,251,2145)
kk=predict(transform, newdata=kkk)
kkk
kkk=test00[c(1:20),]
kk=predict(transform, newdata=kkk)
kkk=ref[c(1:20),]
kk=predict(transform, newdata=kkk)
plot(kk)
kkk
kk
transform=knnreg(val~x+y+z, data=ref)
class(transform)
data(BloodBrain)
inTrain <- createDataPartition(logBBB, p = .8)[[1]]
trainX <- bbbDescr[inTrain,]
trainY <- logBBB[inTrain]
testX <- bbbDescr[-inTrain,]
testY <- logBBB[-inTrain]
fit <- knnreg(trainX, trainY, k = 3)
plot(testY, predict(fit, testX))
head(inTrain)
head(trainX)
names(trainY)
head(trainY)
kk=predict(fit,testX)
class(kk)
head(kk)
transform=knnreg(val~x+y+z, data=ref)
kkk=ref[1:100,]
out=predict(transform, kkk)
class(out)
size(out)
dim(out)
view(ref)
head(ref)
trainX=ref[,2:4]
trainY=ref[,5]
transform=knnreg(trainX, trainY, k=3)
names(test00=c("node", "x", "y", "z"))
names(test00)=c("node", "x", "y", "z")
testX=test00[1:100,]
out=predict(transform, newdata=testX)
head(testX)
testX=test00[1:100,2:4]
out=predict(transform, newdata=testX)
head(out)
plot(test00_val[1:100,2], out)
plot(ref[1:100,2], out)
init <- read.table("C:/PROYECTOS/EN_CURSO/ESTANYGENTO/TRANSITORIO/BASEpp.gid/init.r", header=T, quote="\"")
View(init)
init[1,1]
class(init[,1])
class(init[,2])
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
library("airquality")
dTable(airquality, sPaginationType = "full_numbers")
library("rCharts")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
head(airquality)
airquality
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print(d)
??dTable
require(rCharts)
library("rCharts")
install.packages("rCharts")
?update
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library("manipulate")
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("devtools")
library("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = 'point', color = 'gear')
r1
llibrary("rCharts")
library("rCharts")
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = 'point', color = 'gear')
r1
library("devtools", lib.loc="~/R/win-library/3.1")
install_github("ramnathv/rCharts@dev")
library("rCharts", lib.loc="~/R/win-library/3.1")
library("shiny", lib.loc="~/R/win-library/3.1")
devtools::install_github('rstudio/shinyapps')
setwd("~/GitHub/DDPPShinyApp/DPPApp")
library('shinyapp')
library('shinyapps')
deployapp('fersaDPPApp')
deployApp('fersaDPPApp')
getwd()
deployApp()
